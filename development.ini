#
# stchong - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

#[loggers]
#keys = errorlog
#root,errorlog


#[logger_root]
#level = NOTSET
#handlers = console

#[logger_errorlog]
#level=NOTSET
#handlers=errorlog

#[handlers]
#keys = console,accesslog,errorlog

#[handler_console]
#class = StreamHandler
#args = (sys.stderr,)
#level = DEBUG
#formatter = generic

#[formatters]
#keys = generic

#[formatter_generic]
#format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
#datefmt = %H:%M:%S

#[handler_accesslog]
#class = handlers.RotatingFileHandler
#args = ('access.log','a', 10000, 4)
#level = DEBUG
#formatter = generic

#[handler_errorlog]
#class = handlers.RotatingFileHandler
#args = ('/var/log/myapp/error.log','a', 10*1024*1024, 4)
#level = NOTSET
#formatter = generic

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8300

[sa_auth]
cookie_secret = 7f71f606-2c4c-4902-9783-1286609ffad8

[app:main]
use = egg:stchong
full_stack = true
#lang = ru
cache_dir = %(here)s/data
beaker.session.key = stchong
beaker.session.secret = 7f71f606-2c4c-4902-9783-1286609ffad8
beaker.cache.type=ext:memcached
beaker.cache.url=127.0.0.1:11211
beaker.session.type=ext:memcached
beaker.session.url=127.0.0.1:11211
# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# pick the form for your database
# %(here) may include a ':' character on Windows environments; this can
# invalidate the URI when specifying a SQLite db via path name
# sqlalchemy.url=postgres://username:password@hostname:port/databasename
sqlalchemy.url=mysql://root:2e4n5k2w2x@121.199.3.147:3306/stcHong?charset=utf8


# If you have sqlite, here's a simple default to get you started
# in development

#sqlalchemy.url = sqlite:///%(here)s/devdata.db
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = true
sqlalchemy.pool_recycle = 60

# if you are using Mako and want to be able to reload
# the mako template from disk during the development phase
# you should say 'true' here
# This option is only used for mako templating engine
# WARNING: if you want to deploy your application using a zipped egg
# (ie: if your application's setup.py defines zip-safe=True, then you
# MUST put "false" for the production environment because there will
# be no disk and real files to compare time with.
# On the contrary if your application defines zip-safe=False and is
# deployed in an unzipped manner, then you can leave this option to true
templating.mako.reloadfromdisk = true

# the compiled template dir is a directory that must be readable by your
# webserver. It will be used to store the resulting templates once compiled
# by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security reasons.
templating.mako.compiled_templates_dir = %(here)s/data/templates

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = true

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

#turn this setting to "min" if you would like tw to produce minified
#javascript files (if your library supports that)
toscawidgets.framework.resource_variant=debug

[loggers]
keys = root
#,stchong, sqlalchemy, auth,errorlog

[handlers]
keys = console
#,logfile,accesslog,errorlog,sql

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_stchong]
level = DEBUG
handlers =console
qualname = stchong

[logger_sqlalchemy]
level = INFO
handlers =sql
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)
[logger_accesslog]
lev=NOTSET
handlers=accesslog
qualname=

[logger_errorlog]
level=DEBUG
handlers=errorlog
qualname=
# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers =
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
#class = StreamHandler
class=logging.FileHandler
args=('error.log','a')
#args=('/data/error.log', 'a',1024*1024*50,3)
#args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql]
class = logging.handlers.RotatingFileHandler
args = ('/var/log/myapp/sql.log', 'a',1024*1024*50,3)
level = INFO
formatter = generic

[handler_logfile]
class = logging.handlers.RotatingFileHandler
args = ('/var/log/myapp/myapp.log', 'a',1024*1024*50,3)
level = WARN
formatter = generic

[handler_errorlog]
class = logging.handlers.RotatingFileHandler
args = ('/var/log/myapp/error.log', 'a',1024*1024*50,3)
level = DEBUG
formatter = generic

[handler_accesslog]
class = logging.handlers.RotatingFileHandler
args = ('/var/log/myapp/access.log', 'a',1024*1024*50,3)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %y-%m-%d-%H:%M:%S
